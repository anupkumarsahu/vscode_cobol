{
	"_copyright": "The MIT License (MIT)\nCopyright (c) 2015-2023 spgennard\nSource: https://github.com/spgennard/vscode_cobol/blob/main/syntaxes/bms.tmLanguage.json",
	"$schema": "https://raw.githubusercontent.com/spgennard/vscode_cobol/main/schemas/tmlanguage.json",
	"fileTypes": [],
	"name": "bms",
	"patterns": [
		{
			"match": "^(\\*.*)$",
			"name": "comment.line.set.bms"
		},
		{
			"begin": "'",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.string.bms"
				}
			},
			"end": "('|$)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.string.bms"
				}
			},
			"name": "string.quoted.single.bms"
		},
		{
			"match": "((?i:attrb)(\\=)\\(((?i:ASKIP|PROT|UNPROT\\s+[0-9]*|UNPROT|BRT|NORM|DRK|DET|IC|FSET|DRT|PROT|NUM|,)*)\\))",
			"captures": {
				"1": {
					"name": "keyword.verb.attrb1.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "entity.name.function.bms"
				}
			}
		},
		{
			"match": "(?i:(attrb|initial))(\\=)",
			"captures": {
				"1": {
					"name": "keyword.verb.attrb2.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "entity.name.function.bms"
				}
			}
		},
		{
			"match": "((?i:MAPATTS|DSATTS)(\\=)([\\(]?(?i:(COLOR|HILIGHT|OUTLINE|PS|SOSI|TRANSP|VALIDN|,)+)[\\)]?))",
			"captures": {
				"1": {
					"name": "keyword.verb.mapatts.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "entity.name.function.bms"
				}
			}
		},
		{
			"match": "(?i:UNPROTECTED|UNPROT|PROTECTED|BRIGHT|NORMAL|DARK|FSET|NUMERIC|ASKIP|IC|BRT)",
			"name": "entity.name.function.bms"
		},
		{
			"match": "(?i:DFHMSD|DFHMDI|DFHMDF|END)",
			"name": "keyword.bms"
		},
		{
			"match": "((?i:length|occurs|line|column)(\\=)([0-9]+))",
			"captures": {
				"1": {
					"name": "keyword.verb.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "constant.numeric.integer.bms"
				}
			}
		},
		{
			"match": "((?i:size|pos)(\\=)(\\()([0-9]+)(\\,)([0-9]+)(\\)))",
			"captures": {
				"1": {
					"name": "keyword.verb.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "keyword.bracket.bms"
				},
				"4": {
					"name": "constant.numeric.integer.bms"
				},
				"5": {
					"name": "keyword.operator.bms"
				},
				"6": {
					"name": "constant.numeric.integer.bms"
				},
				"7": {
					"name": "keyword.bracket.bms"
				}
			}
		},
		{
			"match": "(?i:(data)(\\=)(field|block))",
			"captures": {
				"1": {
					"name": "keyword.verb.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "entity.name.function.bms"
				}
			}
		},
		{
			"match": "(?i:(picin|picout)(\\=)('.*'))",
			"captures": {
				"1": {
					"name": "keyword.verb.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "punctuation.definition.string.bms"
				}
			}
		},
		{
			"match": "(?i:(case)(\\=)(mixed))",
			"captures": {
				"1": {
					"name": "keyword.verb.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "entity.name.function.bms"
				}
			}
		},
		{
			"match": "((?i:type)(\\=)((?i:dsect|map|final|&\\w+|&&\\w+)))",
			"captures": {
				"1": {
					"name": "keyword.verb.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "entity.name.function.bms"
				}
			}
		},
		{
			"match": "((?i:justify)(\\=)([\\(]?(?i:left|right|first|last|bottom|space|,)+[\\)]?))",
			"captures": {
				"1": {
					"name": "keyword.verb.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "entity.name.function.bms"
				}
			}
		},
		{
			"match": "(?i:(mode)(\\=)(inout|out|in))",
			"captures": {
				"1": {
					"name": "keyword.verb.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "entity.name.function.bms"
				}
			}
		},
		{
			"match": "(?i:(fold)(\\=)(upper|no|in))",
			"captures": {
				"1": {
					"name": "keyword.verb.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "entity.name.function.bms"
				}
			}
		},
		{
			"match": "(?i:(hilight)(\\=)(off|blink|reverse|underline))",
			"captures": {
				"1": {
					"name": "keyword.verb.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "entity.name.function.bms"
				}
			}
		},

		{
			"match": "((?i:color)(\\=)((?i:blue|red|pink|green|turquoise|yellow|neutral)))",
			"captures": {
				"1": {
					"name": "keyword.verb.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "entity.name.function.bms"
				}
			}
		},
		{
			"match": "((?i:CTRL)(\\=)([\\(]?(?i:PRINT|FREEKB|ALARM|FRSET|,)+)[\\)]?)",
			"captures": {
				"1": {
					"name": "keyword.verb.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "entity.name.function.bms"
				}
			}
		},
		{
			"match": "(?i:(obfmt)(\\=)(yes|no))",
			"captures": {
				"1": {
					"name": "keyword.verb.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "entity.name.function.bms"
				}
			}
		},
		{
			"match": "(?i:(tioapfx|sosi|trigraph|extatt)(\\=)(yes|no))",
			"captures": {
				"1": {
					"name": "keyword.verb.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "entity.name.function.bms"
				}
			}
		},
		{
			"match": "(?i:(base)(\\=)(maparea))",
			"name": "entity.name.function.bms",
			"captures": {
				"1": {
					"name": "keyword.verb.a.bms"
				},
				"2": {
					"name": "keyword.operator.b.bms"
				}
			}
		},
		{
			"match": "(?i:(lang)(\\=)(COBOL|ASM|PLI|RPG))",
			"name": "entity.name.function.bms",
			"captures": {
				"1": {
					"name": "keyword.verb.1.bms"
				},
				"2": {
					"name": "keyword.operator.2.bms"
				}
			}
		},
		{
			"match": "(?i:(storage)(\\=)(auto))",
			"captures": {
				"1": {
					"name": "keyword.verb.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "entity.name.function.bms"
				}
			}
		},
		{
			"match": "(?i:(term)(\\=)([a-zA-Z0-9\\-]+))",
			"captures": {
				"1": {
					"name": "keyword.verb.bms"
				},
				"2": {
					"name": "keyword.operator.bms"
				},
				"3": {
					"name": "entity.name.function.bms"
				}
			}
		},
		{
			"match": "(?![0-9A-Za-z_-])([0-9]+)",
			"name": "constant.numeric.integer.bms"
		},
		{
			"match": "^([0-9a-zA-Z\\-_]+)",
			"name": "variable.bms"
		}
	],
	"scopeName": "source.bms"
}